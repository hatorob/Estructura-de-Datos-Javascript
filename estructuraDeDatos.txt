
Estructura de datos - Platzi

    * Algunas formas de acomodar
    * Modelo que usamos para guardar información

    Formas de organizar
        * Por categorias
        * Por tipo
        * Por colores 
        * Por precios 

Memoria y cómo se guardan los datos  -> 
        * Se almacenan en espacios de memoria - memory slot 
        * El computador busca un espacio libre (address) y los guarda

Tipo de Estructura de datos

    ARRAYS ->   Es una colección de información 

                Data          ["Diego","Andres","Juan","Alejandro"]
                Posición         0       1       2       3

        Métodos
                    Método                  Acción
                    push            Agregar un elemento al final del array 
                    pop             Borra el último elemento 
                    unshift         Agrega un elemento al inicio del array 
                    shift           Borra el primer elemento   
                    splice          Agregar un elemento en una parte del array 

                    Ver ejemplo -> arrayMetodos.js
        
        Arrays estáticos y dinamicos

                Array estático -> le indicamos al array cuantas posiciones va a tener 
                                  esto se le conoce como listas, ya que al ser estático
                                  no podrá mutar mi array
                Array Dinámico -> Este array le podremos agregar todos los valores que 
                                  deseemos por eso es dinámico 


    HASH TABLES -> Son objetos (tabla de hashes) -> similares a los objetos
               
                                                key     value
                                        {
                                            "nombre": "Diego",
                                            "nacionalidad": "Mexicano"
                                        } 

                    Atraves de una función hash crearemos un número de nuestra llave y así
                    poder almacenar nuestra key y valor en un espacio de nuestra hash table.

                            ID ->    BUCKETS -> value
                            **************************
                            *234*               * 6  * 
                            **************************
                            *235*               *    *
                            **************************
                            *...*               *    *
    Key: Mandarinas         **************************
    Value: 20               *237*  Mandarinas   * 20 *
                            **************************
                            *...*               *    *
                            **************************
                            *239*               *    *
                            **************************

                    Métodos
                            insert          Insertar un elemento en la tabla
                            search          Buscar un elemento por key 
                            delete          Borrar un elemento 
                    

                    Colisión de Hash Table -> Se puede generar un mismo hash para diferentes 
                                            keys y esto puede generar una colisión
   

    LINKED LIST ->        head -> nodo -> nodo -> cola(tail)         

                Single linked list
                        head                                 tail
                        * 3  *      * 10 *      * 1  *      * 7  *    null
                        *next*  ->  *next*  ->  *next*  ->  *next*
                Métodos 
                        prepend                 Agregar un nodo al inicio
                        append                  Agregar un nodo al final 
                        lookup / search         Buscar un nodo 
                        insert                  Insertar un nodo en la lista 
                        delete                  Borrar un nodo





